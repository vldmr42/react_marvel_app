{"version":3,"sources":["components/appHeader/AppHeader.js","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","description","name","length","substring","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","slice","i","ErrorBoundary","errorInfo","console","log","children","App","showRandomChar","selectedChar","toggleRandomChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0163f1e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=c7e269245ddf969086b55fe196f79140';\n    _baseOffset = 210;\n    \n    getResource = async (url) => {\n        let res = await fetch(url);\n        \n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n        \n        return await res.json();\n    }\n    \n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n    \n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n    \n    _transformCharacter = (char)=>{\n        \n        char.description = char.description ? char.description : 'No description available for this character.'\n        return{\n            id: char.id,\n            name: char.name,\n            description: char.description.length > 200 ? char.description.substring(0, 200) + '...' : 'No description.',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items,\n        }\n    }\n}\n\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nconst ErrorMessage = ()=>{\n    return (\n        <img style={{display: 'block', width: \"250px\", height: \"250px\", \n        objectFit:'contain', margin: \"0 auto\"}} src={img} alt=\"error\"/>\n    )\n}\n\nexport default ErrorMessage;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component{ \n\n    state = {\n        char:{},\n        loading: true,\n        error: false\n    };\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n    // componentWillUnmount(){\n    //     // console.log('Unmount');\n    //     // clearInterval(this.timerId);\n    // }\n\n    onCharLoaded = (char)=>{\n        this.setState({\n            char,\n            loading: false,\n        })\n    }\n\n    onCharLoading = ()=>{\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onError = ()=>{\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    updateChar = ()=>{\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n\n    render(){\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false,\n    }\n    \n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset)=>{\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n\n    onCharListLoading = ()=>{\n        this.setState({newItemLoading: true});\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9){\n            ended = true;\n        }\n\n        this.setState(({offset, charList})=>({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended,\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    // Этот метод создан для оптимизации, \n    // чтобы не помещать такую конструкцию в метод render\n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={()=>this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    };\n\n    marvelService = new MarvelService();\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps){\n        if (this.props.charId !== prevProps.charId){\n            this.updateChar();\n        }\n    }\n\n    updateChar=()=>{\n        const {charId} = this.props;\n        if(!charId){\n            return;\n        }\n        \n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onCharLoaded = (char)=>{\n        this.setState({\n            char,\n            loading: false,\n        })\n    }\n\n    onCharLoading = ()=>{\n        this.setState({\n            loading: true,\n        })\n    }\n\n    onError = ()=>{\n        this.setState({\n            loading: false,\n            error: true,\n        })\n    }\n\n    render(){\n\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || loading ? null : <Skeleton/>;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char})=>{\n\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n            </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n                    {comics.length > 0 ? null : 'There is no comics with this character'}\n                    {\n                        comics.slice(10).map((item, i)=>{\n                            // if (i > 9) return;\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                    {item.name}\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number,\n}\n\nexport default CharInfo;","import { Component } from \"react\";\n\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component{\n    state = {\n        error: false,\n    }\n\n    static getDerivedStateFromError(error){\n        return{error: true};\n    }\n\n    componentDidCatch(error, errorInfo){\n        console.log(error, errorInfo);\n        this.setState({error:true});\n    }\n\n    render(){\n        if(this.state.error){\n            return <ErrorMessage/>;\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n\n    state = {\n        showRandomChar: true,\n        selectedChar: null,\n    }\n\n    onCharSelected = (id)=>{\n        this.setState({\n            selectedChar: id,\n        })\n    }\n\n    toggleRandomChar = ()=>{\n        this.setState((state)=>{\n            return{\n                showRandomChar: !state.showRandomChar,\n            }\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\nReactDOM.render( \n    <React.StrictMode >\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}